service: aws-python-project
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  timeout: 30
  memorySize: 256
  layers:
  - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p39-pillow:1
  environment:
    THUMBNAIL_SIZE: 128
    REGION_NAME: ${self:provider.region}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*  # Allow all S3 actions
          Resource: "*"  # On all resources

custom:
  bucket: aws-python-project-dev-bucket
  pythonRequirements:
    dockerizePip: true
    s3Deploy:
    - bucket: ${self:custom.bucket}
      properties:
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
              AllowedHeaders:
                - '*'  # Allows all headers
functions:
  s3_thumbnail_generator:
    handler: handler.s3_thumbnail_generator
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*  # Trigger on all object creation events
          rules:
            - prefix: uploads/  # Only for objects in the 'uploads' directory
            - suffix: .png  # Only for objects with a '.png' extension
  upload_image:
    handler: handler.upload_image
    events:
      - http:
          path: upload
          method: post
          cors: true

plugins:
  - serverless-python-requirements # Use the serverless-python-requirements plugin
  - serverless-s3-deploy # Use the serverless-s3-deploy plugin